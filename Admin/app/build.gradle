/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven{
        url "https://nexus.gluonhq.com/nexus/content/repositories/releases/"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // org.json is used to parse JSON
    implementation 'org.json:json:20210307'
    // com.gluonhq.charm.glisten from https://nexus.gluonhq.com/nexus/content/repositories/releases/com/gluonhq/charm-glisten/4.4.1/charm-glisten-4.4.1.pom
}

javafx {
    version = "19"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

application {
    // Define the main class for the application.
    mainClass = 'simpleresvadmin.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Create fat jar
jar {
  manifest {
    attributes(
      'Main-Class': 'simpleresvadmin.App',
    )
  }
}

task fatJar(type: Jar) {
  manifest.from jar.manifest
  // Set name of the fat jar
  baseName = 'simpleresvadmin'
  classifier = 'all'
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  } {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
  with jar
  // Include duplicate classes from dependencies
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}